package main

import (
	"fmt"
	"sync"
)

// Написать программу, которая конкурентно рассчитает значения квадратов чисел,
//  взятых из массива [2,4,6,8,10], и выведет результаты в stdout.

//Подсказка: запусти несколько горутин, каждая из которых возводит число в квадрат.

func main() {
	// заводим массив
	numbers := [5]int{2, 4, 6, 8, 10}

	// используем sync.WaitGroup для ожидания завершения всех горутин
	wg := sync.WaitGroup{}

	// сразу добавим количество горутин в wg ( можно было бы и в цикле wg.Add(1))
	wg.Add(len(numbers))
	for i := 0; i < len(numbers); i++ {
		go func() {
			defer wg.Done()                                    // в дефёре вызываем Done, чтобы уменьшить счетчик wg после завершения горутины
			square := numbers[i] * numbers[i]                  // вычисляем квадрат числа
			fmt.Println("Square of", numbers[i], "is", square) // принтим в stdout
		}() // при этом передавать i в горутину не обязательно, т.к с версией go >=1.22 починили и каждый проход цикла создает свою переменную i
	}

	wg.Wait() // главной горутиной дожидаемся завершения всех горутин
}
